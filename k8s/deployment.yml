apiVersion: v1
kind: Service
metadata:
  name: redis-master
  labels:
    app: redis
    role: master
    tier: db
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
    role: master
    tier: db

---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: redis-master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      role: master
      tier: db
  template:
    metadata:
      labels:
        app: redis
        role: master
        tier: db
    spec:
      containers:
      - name: master
        image: redis:alpine
        args: ["--appendonly", "yes", "--save", "900", "1", "--save", "30", "2"]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379
        volumeMounts:
            - name: redis-master-volume
              mountPath: /data
      volumes:
        - name: redis-master-volume
          gcePersistentDisk:
            pdName: redis-disk
            fsType: ext4

---
apiVersion: v1
kind: Service
metadata:
  name: redis-slave
  labels:
    app: redis
    role: slave
    tier: db
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
    role: slave
    tier: db

---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: redis-slave
spec:
  replicas: 2
  selector:
    matchLabels:
      app: redis
      role: slave
      tier: db
  template:
    metadata:
      labels:
        app: redis
        role: slave
        tier: db
    spec:
      containers:
      - name: slave
        image: gcr.io/revolut-sre-challenge/redis-slave:v2
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: GET_HOSTS_FROM
          value: dns
        ports:
        - containerPort: 6379

---
apiVersion: v1
kind: Service
metadata:
  name: simple-api-backend
spec:
  type: NodePort
  selector:
    app: simple-api
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: simple-api
  template:
    metadata: 
      labels: 
        app: simple-api
    spec:
      containers:
      - name: api-app
        image: gcr.io/revolut-sre-challenge/simple-api-cloud:${TAG}
        ports:
        - containerPort: 8000

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: simple-api
  annotations:
    kubernetes.io/ingress.global-static-ip-name: simple-api-ip
  labels:
    app: simple-api
spec:
  backend:
    serviceName: simple-api-backend
    servicePort: 8000
  tls:
  - secretName: revolut-sre-tls
    hosts:
    - revolut-sre.franceskinj.fr